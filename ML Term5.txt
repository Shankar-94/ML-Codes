from sklearn.datasets import load_iris

irisd=load_iris()

print("keys \n{}".format(irisd.keys()))

print(irisd['DESCR'])

print(irisd.data.shape)

print(irisd.data[0:150])

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(irisd.data,irisd.target,random_state=0)

from sklearn.metrics import classification_report,confusion_matrix,accuracy_score

from sklearn.neighbors import KNeighborsClassifier

knn=KNeighborsClassifier(n_neighbors=8)

knn.fit(X_train,y_train)

import numpy as np
x_new=np.array([[5,2.9,1,0.2]])

prediction=knn.predict(x_new)

print("prediction of test instance {}".format(irisd['target_names'][prediction]))

y_pred=knn.predict(X_test)

print("Accuracy of the model : {}".format(knn.score(X_test,y_test)))

print("prediction of test instance {}".format(prediction))

confusion_matrix(y_test,y_pred)

accuracy_score(y_test,y_pred)

print("Other performance measure: {}".format(classification_report(y_test,y_pred)))

#####################################################################################

import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline

from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt

fig = plt.figure(1, figsize=(20, 15))
ax = Axes3D(fig, elev=48, azim=134)
X = irisd.data
y = irisd.target
ax.scatter(X[:, 0], X[:, 1], X[:, 2], c=y, cmap=plt.cm.Set1, edgecolor='k', s=X[:, 3]*50)

for name, label in [('Virginica', 0), ('Setosa', 1), ('Versicolor', 2)]:
    ax.text3D(X[y == label, 0].mean(),
              X[y == label, 1].mean(),
              X[y == label, 2].mean() + 2, name,
              horizontalalignment='center',
              bbox=dict(alpha=.2, edgecolor='w', facecolor='w'))